

The vs2010 projects are those used to build the windows binaries of glm




Updating version numbers :

 edit :
   vs2010-ic/glm.vcxproj vs2010-vc/glm.vcxproj
 search for previous verions (eg 1.2.1) and replace with new version.


			=======================


You will need to configure visual studio to find fortran libs : see

     http://software.intel.com/en-us/articles/configuring-visual-studio-for-mixed-language-applications

which, in short says :

    Intel® Visual Fortran Composer XE 2013 supports Microsoft Visual Studio 2012, 2010 and 2008. In the text below, substitute 13 where vv is shown.
    Intel® Visual Fortran Composer XE 2011 supports Microsoft Visual Studio 2010, 2008 and 2005. In the text below, substitute 12 where vv is shown.
    Intel® Visual Fortran Compiler Professional Edition 11.1 supports Microsoft Visual Studio 2008, 2005 and 2003. In the text below, substitute 11 where vv is shown.



Configuring Microsoft Visual Studio 2003, 2005 or 2008

This configuration needs to be done one time only per install of Microsoft Visual Studio.

Open Microsoft Visual Studio.  Select Tools > Options. In the left pane, expand Projects and Solutions,
   click on VC++ Directories. (Visual Studio .NET 2003 uses "Projects" instead of "Projects and Solutions")
   and then select "Library Files" for "Show directories for".

Setting library list in VS2008

Click on the New Line button (to the right of the "check mark" button) and enter the following new line
   if you are using Intel Visual Fortran Composer XE 2013 or 2011:

$(IFORT_COMPILERvv)compiler\lib\ia32

or the following new line if you are using Intel Visual Fortran 11.x:

$(IFORT_COMPILER11)lib\ia32

If you will be developing for the Intel 64 architecture, repeat the above steps, using the Platform dropdown
   to select "x64" (Intel 64) . When entering the path, use "intel64" or "ia64" instead of "ia32". Note that
   Microsoft Visual Studio 2003 does not support the x64 platform. If you do not see x64 as an available
   platform, see the Fortran Release Notes for instructions on how to configure Microsoft Visual Studio for
   64-bit development.


Configuring Microsoft Visual Studio 2012 or 2010

NOTE: In Microsoft Visual Studio 2010 and later, a C++ project will not link in a non-C++ dependent project
   library. If you are using a C/C++ main program with a Fortran static or dynamic library as a dependent project,
   you must explicitly provide the path to the Fortran library, (the .lib export library in the case of a
   DLL project), in the C/C++ project's Linker > Additional Dependencies property, or as a "source file" in the project.

NOTE: In Microsoft Visual Studio 2010 and 2012, a Fortran project will not link in a C++ DLL dependent project.
   A C++ static library dependent project will be linked in. If your Fortran project has a dependent C/C++ DLL
   project, you must explicitly provide the path to the C++ project's DLL export library (.lib) in the Fortran
   project's Linker > Additional Dependencies property, or as a "source file" in the project.

 In Visual Studio, with a solution open that contains a C++ project, select View > Property Manager. If you do
   not see Property Manager under the View menu, you will find it under View > Additional Windows. The Property
   Manager window will appear. Note that this is not Properties Window or Properties Pages.

      Click on the triangles or + signs to expand the property tree under the Debug|Win32 configuration. See the image below.
      Double click on Microsoft.Cpp.Win32.user
      Select VC++ Directories
      Click in the field to the right of "Library Directories"
      Click the triangle that appears to the right and select <Edit...>
      Click the New Line button or press Ctrl-Insert
      In the new field that appears, type:
      $(IFORT_COMPILERvv)\compiler\lib\ia32
      Click OK, OK
      In the Visual Studio toolbar, select File > Save All

